'''
Задача Фибоначчи

F(n)=F(n-1)+F(n-2)  (with F1=F2=1 to initiate the sequence)

1) кролики за 1 месяц достигают половозрелости
2) чтобы дать потомство, нужен ещё месяц
3) начинается всё с пары неполовозрелых кроликов
4) кролики не умирают
5) пара кроликов в приплоде даёт только одну пару новых кроликов

A key observation is that the number of offspring in any month is equal to 
the number of rabbits that were alive two months prior.

В нашей задаче приплод (k) может быть от 1 до 5 оба конца включая.
Тогда в нашем случае, количество потомков в этом месяце равно количеству клоликов два месяца назад, умноженному на k
И тогда рекурсивная формула будет выглядеть: F(n)=F(n-1)+k*F(n-2)

'''
n = int(input())
k = int(input())
fib = [1, 1]
s = 0
if n==1 or n==2:
    print(1)
else:
    for i in range(n-2):  #n-2 потому что у нас уже есть заданных первых два числа, и мы должны добавить n-2, если хотим в итоге получить n
        s = k*fib[i] + fib[i+1]
        fib.append(s)
    print (fib)
    print (fib[n-1]) #n-1 потому что последний символ при индексации питона с 0 будет как раз n-1
